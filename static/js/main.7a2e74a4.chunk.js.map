{"version":3,"sources":["components/SingleToDo.js","components/FilterButton.js","store/errand.js","components/ToDo.js","components/App.js","reportWebVitals.js","store/index.js","index.js"],"names":["SingleToDo","state","content","toggleEdit","handleChange","bind","handleEnter","event","this","setState","target","value","key","props","updateErrand","err","id","className","type","checked","isDone","onChange","handleDone","onKeyDown","onDoubleClick","htmlFor","onClick","handleDelete","React","Component","FilterButton","setFilter","name","link","GET_ERRANDS","ADD_ERRAND","UPDATE_ERRAND","DELETE_ERRAND","INITIAL_STATE","all","addErrand","errand","filterOpt","All","Active","Completed","ToDo","filter","fetchErrands","update","deleteErrand","length","string","map","filterButtons","Object","keys","pressed","handleAllDone","numOfTasks","connect","count","dispatch","a","axios","get","data","errands","console","log","post","addErrandDB","errandID","put","updateErrandDB","delete","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","element","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a2e74a4.chunk.js","sourcesContent":["import React from 'react'\n\nclass SingleToDo extends React.Component {\n  constructor(){\n    super()\n    this.state= {\n      content: '',\n      toggleEdit: false\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleEnter = this.handleEnter.bind(this)\n  }\n  handleChange(event){\n    this.setState({\n      content: event.target.value\n    })\n  }\n  handleEnter(event){\n    if(event.key === 'Enter'){\n      this.props.updateErrand(this.props.err.id, {content:this.state.content})\n      this.setState({\n        toggleEdit: !this.state.toggleEdit\n      })\n    }\n  }\n  componentDidMount(){\n    this.setState({\n      content: this.props.err.content\n    })\n  }\n  render(){\n  return (\n    <div className = 'todo-errand'>\n      <div className = 'check-label'>\n      <input className= \"check\" id = {this.props.err.id} type = \"checkbox\" checked = {this.props.err.isDone || false} onChange={\n       ()=> this.props.handleDone(this.props.err.id, { 'isDone':!this.props.err.isDone})}\n        />\n      {this.state.toggleEdit? <input type=\"text\" value={this.state.content} onChange={this.handleChange} onKeyDown={this.handleEnter}/> :<label className=\"strikethrough\" onDoubleClick={()=> {\n          this.setState({toggleEdit:!this.state.toggleEdit})\n          }} htmlFor={this.props.err.id}>{this.props.err.content || ''}</label> }\n      </div>\n      <button className = \"button-delete\" onClick={()=>this.props.handleDelete(this.props.err.id)}> X </button>\n    </div>\n  )\n  }\n}\n\nexport default SingleToDo\n","import React from 'react'\n\nfunction FilterButton(props) {\n  return (\n    <button type=\"button\" className=\"button-toggle\" onClick={()=>props.setFilter(props.name)}>\n      <span>{props.name}</span>\n    </button>\n  )\n}\n\nexport default FilterButton\n","import axios from 'axios'\nconst link = 'https://todo-dbbe.herokuapp.com/todos'\n\n/* Action Types */\nconst GET_ERRANDS = 'GET_ERRANDS'\nconst ADD_ERRAND = 'ADD_ERRAND'\nconst UPDATE_ERRAND = 'UPDATE_ERRAND'\nconst DELETE_ERRAND = 'DELETE_ERRAND'\n\n/* Initial State */\nconst INITIAL_STATE = {all:[]}\n\n/* Action Creators */\nconst getErrands = errands => ({type:GET_ERRANDS, errands})\nconst addErrand = errand => ({type:ADD_ERRAND, errand})\nconst updateErrand = errand => ({type:UPDATE_ERRAND, errand})\nconst deleteErrand = errand => ({type:DELETE_ERRAND, errand})\n\nexport const fetchErrands = () => {\n  return async dispatch => {\n    try{\n      const {data} = await axios.get(link)\n      dispatch(getErrands(data))\n    }\n    catch(err){\n      console.log(err)\n    }\n  }\n}\n\nexport const addErrandDB = (errand) => {\n  return async dispatch => {\n    try{\n      const {data} = await axios.post(link, errand)\n      dispatch(addErrand(data))\n    }\n    catch(err){\n      console.log(err)\n    }\n  }\n}\n\nexport const updateErrandDB = (errandID, update) => {\n  return async dispatch => {\n    try{\n      const {data} = await axios.put(link+`/${errandID}`, update)\n      dispatch(updateErrand(data))\n    }\n    catch(err){\n      console.log(err)\n    }\n  }\n}\n\nexport const deleteErrandDB = (errandID) => {\n  return async dispatch => {\n    try {\n      const {data} = await axios.delete(link+`/${errandID}`)\n      dispatch(deleteErrand(data))\n    }\n    catch(err){\n      console.log(err)\n    }\n  }\n}\n\nexport default function(state = INITIAL_STATE, action){\n  switch(action.type){\n    case GET_ERRANDS:\n      return {\n        all: action.errands\n      }\n    case ADD_ERRAND:\n      return {\n        all: [...state.all, action.errand]\n      }\n    case UPDATE_ERRAND:\n      return {\n        all: state.all.map((element)=> {\n          if(element.id === action.errand.id) return action.errand\n          return element\n        })\n      }\n    case DELETE_ERRAND:\n      console.log('action', action)\n      return {\n        all: state.all.filter((element) => element.id !== action.errand.id)\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport SingleToDo from './SingleToDo'\nimport FilterButton from './FilterButton'\nimport {connect} from 'react-redux'\nimport {fetchErrands, addErrandDB, updateErrandDB, deleteErrandDB} from '../store/errand'\n\nconst filterOpt = {\n  All: () => true,\n  Active: errand => !errand.isDone,\n  Completed: errand => errand.isDone\n}\n\nclass ToDo extends React.Component{\n  constructor(){\n    super()\n    this.state = {\n      content: '',\n      isDone: false,\n      filter: 'All',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleEnter = this.handleEnter.bind(this)\n    this.handleDone = this.handleDone.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.setFilter=this.setFilter.bind(this)\n  }\n  componentDidMount(){\n    this.props.fetchErrands();\n  }\n\n  handleChange(event){\n    this.setState({\n      content: event.target.value\n    })\n  }\n  handleEnter(event){\n    if(event.key === 'Enter'){\n      this.props.addErrand(this.state)\n      this.setState({\n        content: ''\n      })\n    }\n  }\n  handleDone(id, update){\n    this.props.updateErrand(id,update)\n  }\n  handleDelete(id){\n    this.props.deleteErrand(id)\n  }\n  numOfTasks(){\n    return this.props.errand.all.filter((errand)=>!errand.isDone).length\n  }\n  setFilter(string){\n    this.setState({\n        filter: string\n      })\n  }\n  handleAllDone(){\n    this.props.errand.all.map((errand)=>this.handleDone(errand.id, {'isDone' : !this.state.isDone}))\n    this.setState({\n      isDone: !this.state.isDone\n    })\n  }\n\n\n  render(){\n    const filterButtons = Object.keys(filterOpt).map(filter => (<FilterButton key={filter} name={filter} setFilter={this.setFilter} pressed={filter===this.state.filter}/>))\n    return(\n      <div className='container'>\n        <div className = 'chevron-container'>\n        <button type='button' className='button-chevron' onClick= {()=>this.handleAllDone()}></button>\n        <input\n        className = \"input-add\"\n        type='text' value = {this.state.content} onChange = {this.handleChange} onKeyDown = {this.handleEnter}/>\n        </div>\n        <div className='todo-list'>\n          {this.props.errand.all.filter(filterOpt[this.state.filter]).map((errand) => <SingleToDo key = {errand.id} err={errand} handleDone = {this.handleDone} handleDelete = {this.handleDelete} updateErrand={this.props.updateErrand}/> )}\n        </div>\n        <div className=\"bottom-container\">\n        <div id = 'counter'>{this.numOfTasks()} {this.numOfTasks() > 1 ? 'items' : 'item'} left</div>\n        <div className ='filters'>\n          {filterButtons}\n        </div>\n        <div className='button-clear-completed'>\n          {this.props.errand.all.filter((errand)=> errand.isDone).length > 0 ? <button type=\"button\" onClick={()=>this.props.errand.all.filter((errand)=>errand.isDone).map((errand)=>this.handleDelete(errand.id))}>Clear Completed</button> : <button className =\"button-invisible\"> </button>}\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapState = state => {\n  return {\n    errand: state.errand,\n    count: state.count\n  }\n}\nconst mapDispatch = dispatch => ({\n  fetchErrands: () => dispatch(fetchErrands()),\n  addErrand: (errand) => dispatch(addErrandDB(errand)),\n  updateErrand: (id, update) => dispatch(updateErrandDB(id, update)),\n  deleteErrand: (id) => dispatch(deleteErrandDB(id)),\n})\nexport default connect(mapState,mapDispatch)(ToDo)\n","import React from 'react'\nimport ToDo from './ToDo'\n\nconst App = () => {\n  return (\n    <div id = \"background\">\n      <h1 id = \"title\">ToDo</h1>\n      <ToDo/>\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import errand from './errand'\nimport {createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  errand,\n})\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({collapsed:true}))\n)\n\nconst store = createStore(reducer,middleware)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}